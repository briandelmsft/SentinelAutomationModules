{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-MCASInvestigationScore",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName":"[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "accessControl": {
                    "triggers": {
                        "allowedCallerIpAddresses": []
                    }
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Check_for_Errors": {
                            "actions": {
                                "Response_when_permissions_issues": {
                                    "inputs": {
                                        "body": {
                                            "Error": "@{parameters('PlaybookInternalName')} failed to execute with status @{body('Filter_array_Errors')[0]}",
                                            "PlaybookName": "@{workflow()?['name']}",
                                            "PlaybookResourceId": "@{workflow()?['id']}",
                                            "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                            "PlaybookVersion": "@{parameters('PlaybookVersion')}"
                                        },
                                        "statusCode": "@body('Filter_array_Errors')[0]"
                                    },
                                    "kind": "Http",
                                    "runAfter": {},
                                    "type": "Response"
                                },
                                "Terminate_with_REST_API_Call_failure": {
                                    "inputs": {
                                        "runError": {
                                            "code": "@{body('Filter_array_Errors')[0]}"
                                        },
                                        "runStatus": "Failed"
                                    },
                                    "runAfter": {
                                        "Response_when_permissions_issues": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate"
                                }
                            },
                            "else": {
                                "actions": {
                                    "Compose_final_response": {
                                        "inputs": {
                                            "AboveThreholdCount": "@length(body('Filter_scores_above_the_threshold'))",
                                            "AnalyzedEntities": "@length(variables('DetailedResults'))",
                                            "DetailedResults": "@variables('DetailedResults')",
                                            "MaximumScore": "@max(variables('Scores'))"
                                        },
                                        "runAfter": {
                                            "Filter_scores_above_the_threshold": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Compose"
                                    },
                                    "Condition_-_Check_if_comment_is_required": {
                                        "actions": {
                                            "Add_MCAS_score_in_a_comment": {
                                                "inputs": {
                                                    "body": {
                                                        "incidentArmId": "@body('Parse_JSON')?['IncidentARMId']",
                                                        "message": "<p>MCAS Users' investigation priority scores per user: @{replace(replace(replace(body('Create_HTML_table_for_comment'), '&lt;', '<'), '&gt;', '>'), '&quot;', '\"')}</p>"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/Incidents/Comment"
                                                },
                                                "runAfter": {
                                                    "Create_HTML_table_for_comment": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection"
                                            },
                                            "Create_HTML_table_for_comment": {
                                                "inputs": {
                                                    "format": "HTML",
                                                    "from": "@variables('DetailedResults')"
                                                },
                                                "runAfter": {},
                                                "type": "Table"
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@triggerBody()?['AddIncidentComments']",
                                                        "@true"
                                                    ]
                                                }
                                            ]
                                        },
                                        "runAfter": {
                                            "Compose_final_response": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "Filter_scores_above_the_threshold": {
                                        "inputs": {
                                            "from": "@variables('Scores')",
                                            "where": "@greater(item(), triggerBody()?['ScoreThreshold'])"
                                        },
                                        "runAfter": {},
                                        "type": "Query"
                                    },
                                    "Return_final_response": {
                                        "inputs": {
                                            "body": "@outputs('Compose_final_response')",
                                            "statusCode": 200
                                        },
                                        "kind": "Http",
                                        "runAfter": {
                                            "Condition_-_Check_if_comment_is_required": [
                                                "Succeeded",
                                                "Failed"
                                            ]
                                        },
                                        "type": "Response"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(body('Filter_array_Errors'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Filter_array_Errors": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Check_if_the_APIURL_is_set": {
                            "actions": {
                                "For_each_TenantRegions_value": {
                                    "actions": {
                                        "Check_for_probe's_response": {
                                            "actions": {
                                                "Set_APIURL": {
                                                    "inputs": {
                                                        "name": "APIURL",
                                                        "value": "@{outputs('Compose_URL')}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('HTTP_Probe_URL')?['detail']",
                                                                "tenant not found"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('HTTP_Probe_URL')?['detail']",
                                                                "tenant is disabled"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('HTTP_Probe_URL')?['detail']",
                                                                "Invalid token"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "HTTP_Probe_URL": [
                                                    "Succeeded",
                                                    "Failed"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Compose_URL": {
                                            "inputs": "https://@{item()}.portal.cloudappsecurity.com",
                                            "runAfter": {},
                                            "type": "Compose"
                                        },
                                        "HTTP_Probe_URL": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "05a65629-4c1b-48c1-a78b-804c4abdd4af",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "limit": 1
                                                },
                                                "method": "POST",
                                                "uri": "@{outputs('Compose_URL')}/cas/api/v1/entities/"
                                            },
                                            "runAfter": {
                                                "Compose_URL": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        }
                                    },
                                    "description": "Brute forcing the URL to find the right one without asking the user",
                                    "foreach": "@variables('TenantRegions')",
                                    "runAfter": {},
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 20
                                        }
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "description": "If not already set, we will enter in a loop to detect the URL in best effort.",
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(variables('APIURL'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_TenantRegions_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Terminate_if_no_accounts": {
                            "actions": {
                                "Response_-_No_Account_Entities": {
                                    "inputs": {
                                        "body": {
                                            "AnalyzedEntities": 0,
                                            "DetailedResults": [],
                                            "MaximumScore": 0,
                                            "UnderThreholdCount": 0
                                        },
                                        "statusCode": 200
                                    },
                                    "kind": "Http",
                                    "runAfter": {},
                                    "type": "Response"
                                },
                                "Terminate": {
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    },
                                    "runAfter": {
                                        "Response_-_No_Account_Entities": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Parse_JSON')?['AccountsCount']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Fail_if_no_APIURL_were_selected_or_present": {
                            "actions": {
                                "Response_no_APIURL": {
                                    "inputs": {
                                        "body": {
                                            "Error": "@{parameters('PlaybookInternalName')} failed to execute. There are no API URL configured or automatically detectable.",
                                            "PlaybookName": "@{workflow()?['name']}",
                                            "PlaybookResourceId": "@{workflow()?['id']}",
                                            "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                            "PlaybookVersion": "@{parameters('PlaybookVersion')}"
                                        },
                                        "statusCode": 404
                                    },
                                    "kind": "Http",
                                    "runAfter": {},
                                    "type": "Response"
                                },
                                "Terminate_no_APIURL": {
                                    "inputs": {
                                        "runError": {
                                            "code": "404"
                                        },
                                        "runStatus": "Failed"
                                    },
                                    "runAfter": {
                                        "Response_no_APIURL": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(variables('APIURL'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Check_if_the_APIURL_is_set": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Filter_array_-_Get_only_accounts_with_id": {
                            "inputs": {
                                "from": "@body('Parse_JSON')?['Accounts']",
                                "where": "@greater(length(coalesce(item()?['id'], '')), 0)"
                            },
                            "runAfter": {
                                "Fail_if_no_APIURL_were_selected_or_present": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query"
                        },
                        "Filter_array_Errors": {
                            "inputs": {
                                "from": "@variables('StatusCodeErrors')",
                                "where": "@not(equals(item(), 404))"
                            },
                            "runAfter": {
                                "For_each_account": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query"
                        },
                        "For_each_account": {
                            "actions": {
                                "Compose_Base64": {
                                    "inputs": "@base64(outputs('Compose_PkUser'))",
                                    "runAfter": {
                                        "Compose_PkUser": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose"
                                },
                                "Compose_PkUser": {
                                    "inputs": {
                                        "id": "@{items('For_each_account')['id']}",
                                        "inst": 0,
                                        "saas": 11161
                                    },
                                    "runAfter": {},
                                    "type": "Compose"
                                },
                                "Condition_-_Check_MCAS_API_Results": {
                                    "actions": {
                                        "Update_DetailedResults_array": {
                                            "inputs": {
                                                "name": "DetailedResults",
                                                "value": {
                                                    "ThreatScore": "@coalesce(body('HTTP_-_MCAS_API_Call')['threatScore'],0)",
                                                    "UserId": "<a href=\"https://security.microsoft.com/user/?aad=@{items('For_each_account')?['id']}&tid=@{body('Parse_JSON')?['TenantId']}\">@{items('For_each_account')?['id']}</a>",
                                                    "UserPrincipalName": "@{coalesce(item()?['UserPrincipalName'],null)}"
                                                }
                                            },
                                            "runAfter": {
                                                "Update_Scores_array": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable"
                                        },
                                        "Update_Scores_array": {
                                            "inputs": {
                                                "name": "Scores",
                                                "value": "@coalesce(body('HTTP_-_MCAS_API_Call')['threatScore'],0)"
                                            },
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_to_array_variable": {
                                                "inputs": {
                                                    "name": "StatusCodeErrors",
                                                    "value": "@outputs('HTTP_-_MCAS_API_Call')['statusCode']"
                                                },
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@outputs('HTTP_-_MCAS_API_Call')['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "HTTP_-_MCAS_API_Call": [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP_-_MCAS_API_Call": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "05a65629-4c1b-48c1-a78b-804c4abdd4af",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "@{variables('APIURL')}/cas/api/v1/entities/@{outputs('Compose_Base64')}/"
                                    },
                                    "runAfter": {
                                        "Compose_Base64": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http"
                                }
                            },
                            "foreach": "@body('Filter_array_-_Get_only_accounts_with_id')",
                            "runAfter": {
                                "Filter_array_-_Get_only_accounts_with_id": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_APIURL": {
                            "description": "It is recommended you initialize this variable with your Microsoft Defender for Cloud Apps API URL. Else, we will try to find it for you in a best effort mode. Format https://<tenant name>.<tenantregion>.portal.cloudappsecurity.com (no final \"/\")",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "APIURL",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_DetailedResults": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DetailedResults",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            },
                            "runAfter": {
                                "Condition_-_Terminate_if_no_accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_Scores_array": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Scores",
                                        "type": "array",
                                        "value": [
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_StatusCodeErrors": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_TenantRegions_array": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TenantRegions",
                                        "type": "array",
                                        "value": [
                                            "eu",
                                            "eu2",
                                            "us",
                                            "us2",
                                            "us3"
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_Scores_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_StatusCodeErrors": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StatusCodeErrors",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_DetailedResults": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Parse_JSON": {
                            "inputs": {
                                "content": "@triggerBody()?['Entities']",
                                "schema": {
                                    "properties": {
                                        "Accounts": {
                                            "description": "Array of User Accounts",
                                            "items": {
                                                "properties": {
                                                    "AssignedRoles": {
                                                        "description": "Array of assigned roles in Accounts array",
                                                        "items": {
                                                            "properties": {
                                                                "Role": {
                                                                    "description": "Array property in AssignedRoles array"
                                                                }
                                                            },
                                                            "required": [],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Accounts array",
                                                        "properties": {
                                                            "accountName": {
                                                                "description": "accountName from RawEntity object in Accounts array"
                                                            },
                                                            "displayName": {
                                                                "description": "dislayName from RawEntity object in Accounts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Accounts array"
                                                            },
                                                            "isDomainJoined": {
                                                                "description": "isDomainJoined from RawEntity object in Accounts array"
                                                            },
                                                            "sid": {
                                                                "description": "sid from RawEntity object in Accounts array"
                                                            },
                                                            "upnSuffix": {
                                                                "description": "upnSuffix from RawEntity object in Accounts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "accountEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "city": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "country": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "department": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "id": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "jobTitle": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "mail": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "manager": {
                                                        "description": "Array property in Accounts array",
                                                        "properties": {
                                                            "@@odata.type": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "id": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "mail": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "userPrincipalName": {
                                                                "description": "Array property in Accounts array manager object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "officeLocation": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDistinguishedName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDomainName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSamAccountName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSecurityIdentifier": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSyncEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "state": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "userPrincipalName": {
                                                        "description": "Array property in Accounts array"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "AccountsCount": {
                                            "description": "Count of accounts processed by module",
                                            "type": "integer"
                                        },
                                        "Domains": {
                                            "description": "Array of Domains",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Domains array",
                                                        "properties": {
                                                            "domainName": {
                                                                "description": "domainName from RawEntity object in Domains array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Domains array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DomainsCount": {
                                            "description": "Count of Domains processed by module",
                                            "type": "integer"
                                        },
                                        "EntitiesCount": {
                                            "description": "Count of all entities processed by enrichment module",
                                            "type": "integer"
                                        },
                                        "FileHashes": {
                                            "description": "Array of FileHashes",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in FileHashes array",
                                                        "properties": {
                                                            "algorithm": {
                                                                "description": "algorithm from RawEntity object in FileHashes array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in FileHashes array"
                                                            },
                                                            "hashValue": {
                                                                "description": "hashValue from RawEntity object in FileHashes array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FileHashesCount": {
                                            "description": "Count of File Hashes processed by module",
                                            "type": "integer"
                                        },
                                        "Files": {
                                            "description": "Array of Files",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Files array",
                                                        "properties": {
                                                            "directory": {
                                                                "description": "directory from RawEntity object in Files array"
                                                            },
                                                            "fileName": {
                                                                "description": "fileName from RawEntity object in Files array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Files array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FilesCount": {
                                            "description": "Count of Files processed by module",
                                            "type": "integer"
                                        },
                                        "Hosts": {
                                            "description": "Array of Hosts",
                                            "items": {
                                                "properties": {
                                                    "DnsDomain": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "FQDN": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "Hostname": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Hosts array",
                                                        "properties": {
                                                            "dnsDomain": {
                                                                "description": "dnsDomain from RawEntity object in Hosts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Hosts array"
                                                            },
                                                            "hostName": {
                                                                "description": "hostName from RawEntity object in Hosts array"
                                                            },
                                                            "netBiosName": {
                                                                "description": "netBiosName from RawEntity object in Hosts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "HostsCount": {
                                            "description": "Count of Hosts processed by module",
                                            "type": "integer"
                                        },
                                        "IPs": {
                                            "description": "Array of IP Addresses",
                                            "items": {
                                                "properties": {
                                                    "Address": {
                                                        "description": "Array property in IPs array"
                                                    },
                                                    "GeoData": {
                                                        "description": "Array object in IPs array",
                                                        "properties": {
                                                            "asn": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "carrier": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "city": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "cityCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "continent": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "country": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "countryCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipAddr": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipRoutingType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "latitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "longitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organization": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organizationType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "region": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "state": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCode": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in IPs array",
                                                        "properties": {
                                                            "address": {
                                                                "description": "address from RawEntity object in IPs array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in IPs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "IPsCount": {
                                            "description": "Count of IPs processed by module",
                                            "type": "integer"
                                        },
                                        "IncidentARMId": {
                                            "description": "The ARM Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        },
                                        "ModuleVersions": {
                                            "properties": {
                                                "AADRisksModule": {
                                                    "type": "string"
                                                },
                                                "BaseModule": {
                                                    "type": "string"
                                                },
                                                "FileModule": {
                                                    "type": "string"
                                                },
                                                "KQLModule": {
                                                    "type": "string"
                                                },
                                                "MCASModule": {
                                                    "type": "string"
                                                },
                                                "MDEModule": {
                                                    "type": "string"
                                                },
                                                "OOFModule": {
                                                    "type": "string"
                                                },
                                                "RelatedAlerts": {
                                                    "type": "string"
                                                },
                                                "TIModule": {
                                                    "type": "string"
                                                },
                                                "UEBAModule": {
                                                    "type": "string"
                                                },
                                                "WatchlistModule": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "TenantDisplayName": {
                                            "description": "Azure AD Tenant Display Name",
                                            "type": "string"
                                        },
                                        "TenantId": {
                                            "description": "Azure AD Tenant Id",
                                            "type": "string"
                                        },
                                        "URLs": {
                                            "description": "Array of URLs",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in URLs array",
                                                        "properties": {
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in URLs array"
                                                            },
                                                            "url": {
                                                                "description": "url from RawEntity object in URLs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "URLsCount": {
                                            "description": "Count of URLs processed by module",
                                            "type": "integer"
                                        },
                                        "WorkspaceId": {
                                            "description": "The Log Analytics Workspace Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "Initialize_APIURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "PlaybookInternalName": {
                            "defaultValue": "MCASModule",
                            "type": "String"
                        },
                        "PlaybookVersion": {
                            "defaultValue": "0.0.6",
                            "type": "String"
                        },
                        "ProjectName": {
                            "defaultValue": "STAT",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "triage": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "title": "Add comments to the incident",
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the Entities object from the Dynamic content menu",
                                            "type": "array"
                                        },
                                        "ScoreThreshold": {
                                            "description": "Type the minimum investigation Score",
                                            "title": "Investigation Score Threshold",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}
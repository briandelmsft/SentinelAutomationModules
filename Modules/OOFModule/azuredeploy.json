{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Get-OOFDetails",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "ConversionServiceConnectionName": "[concat('conversionservice-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ConversionServiceConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('ConversionServiceConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/conversionservice')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('ConversionServiceConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "accessControl": {
                    "triggers": {
                        "allowedCallerIpAddresses": []
                    },
                    "actions": {
                        "allowedCallerIpAddresses": []
                    },
                    "contents": {
                        "allowedCallerIpAddresses": []
                    }
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "PlaybookVersion": {
                            "defaultValue": "0.0.3",
                            "type": "String"
                        },
                        "PlaybookInternalName": {
                            "defaultValue": "OOFModule",
                            "type": "String"
                        },
                        "ProjectName": {
                            "defaultValue": "STAT",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "triage": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddIncidentComments": {
                                            "title": "Add comments to the incident",
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the Body object from the Base-Module output in the Dynamic content menu",
                                            "title": "Base Module Body",
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose": {
                            "runAfter": {
                                "Filter_array_-_OOF_Disabled": [
                                    "Succeeded"
                                ],
                                "Filter_array_-_OOF_Enabled": [
                                    "Succeeded"
                                ],
                                "Filter_array_-_OOF_Unknown": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "AllUsersInOffice": "@equals(length(body('Filter_array_-_OOF_Disabled')),length(variables('DetailedResults')))",
                                "AllUsersOutOfOffice": "@equals(length(body('Filter_array_-_OOF_Enabled')),length(variables('DetailedResults')))",
                                "DetailedResults": "@variables('DetailedResults')",
                                "UsersInOffice": "@length(body('Filter_array_-_OOF_Disabled'))",
                                "UsersOutOfOffice": "@length(body('Filter_array_-_OOF_Enabled'))",
                                "UsersUnknown": "@length(body('Filter_array_-_OOF_Unknown'))"
                            }
                        },
                        "Condition_-_Check_for_Account_Entities": {
                            "actions": {
                                "Response_-_No_Account_Entities": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "AllUsersInOffice": false,
                                            "AllUsersOutOfOffice": false,
                                            "DetailedResults": [],
                                            "UsersInOffice": 0,
                                            "UsersOutOfOffice": 0,
                                            "UsersUnknown": 0
                                        },
                                        "statusCode": 200
                                    }
                                },
                                "Terminate": {
                                    "runAfter": {
                                        "Response_-_No_Account_Entities": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_-_APIFailure": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Parse_JSON')?['AccountsCount']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Comment": {
                            "actions": {
                                "Add_comment_to_incident_(V3)": {
                                    "runAfter": {
                                        "Create_HTML_table": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@body('Parse_JSON')?['IncidentARMId']",
                                            "message": "<p>User Out of Office Status:<br>\n@{body('Create_HTML_table')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Create_HTML_table": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@variables('DetailedResults')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['AddIncidentComments']",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Error_Check": {
                            "actions": {
                                "Response_-_API_Failure": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "Error": "@{parameters('PlaybookInternalName')} failed to execute with status 401",
                                            "PlaybookName": "@{workflow()?['name']}",
                                            "PlaybookResourceId": "@{workflow()?['id']}",
                                            "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                            "PlaybookVersion": "@parameters('PlaybookVersion')"
                                        },
                                        "statusCode": 401
                                    }
                                },
                                "Terminate_-_API_Failure": {
                                    "runAfter": {
                                        "Response_-_API_Failure": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "message": "API Failure - Unauthorized"
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('APIFailure')",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Current_time": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Expression",
                            "kind": "CurrentTime",
                            "inputs": {}
                        },
                        "Filter_array_-_OOF_Disabled": {
                            "runAfter": {
                                "Condition_-_Error_Check": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@variables('DetailedResults')",
                                "where": "@equals(item()['OOFStatus'], 'disabled')"
                            }
                        },
                        "Filter_array_-_OOF_Enabled": {
                            "runAfter": {
                                "Condition_-_Error_Check": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@variables('DetailedResults')",
                                "where": "@equals(item()['OOFStatus'], 'enabled')"
                            }
                        },
                        "Filter_array_-_OOF_Unknown": {
                            "runAfter": {
                                "Condition_-_Error_Check": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@variables('DetailedResults')",
                                "where": "@equals(item()['OOFStatus'], 'unknown')"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Parse_JSON')?['Accounts']",
                            "actions": {
                                "Condition_-_Handle_Error": {
                                    "actions": {
                                        "Set_variable_APIFailure": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "APIFailure",
                                                "value": true
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "HTTP": [
                                            "Failed"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_to_DetailedResults_-_Failed_Graph_Call": {
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "DetailedResults",
                                                    "value": {
                                                        "ExternalMessage": "",
                                                        "InternalMessage": "",
                                                        "OOFStatus": "unknown",
                                                        "UPN": "@{coalesce(items('For_each')?['userPrincipalName'],items('For_each')?['RawEntity']?['friendlyName'])}"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "or": [
                                            {
                                                "equals": [
                                                    "@outputs('HTTP')['statusCode']",
                                                    401
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/v1.0/users/@{items('For_each')?['userPrincipalName']}/mailboxSettings/automaticRepliesSetting"
                                    }
                                },
                                "Switch": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "cases": {
                                        "Case_-_alwaysEnabled": {
                                            "case": "alwaysEnabled",
                                            "actions": {
                                                "Append_to_DetailedResults_-_alwaysEnabled": {
                                                    "runAfter": {
                                                        "Html_to_text_-_internal": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "DetailedResults",
                                                        "value": {
                                                            "ExternalMessage": "@{take(body('Html_to_text_-_external'), 600)}",
                                                            "InternalMessage": "@{take(body('Html_to_text_-_internal'), 600)}",
                                                            "OOFStatus": "enabled",
                                                            "UPN": "@{items('For_each')?['userPrincipalName']}"
                                                        }
                                                    }
                                                },
                                                "Html_to_text_-_external": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": "<p>@{body('HTTP')['externalReplyMessage']}</p>",
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['conversionservice']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/html2text"
                                                    }
                                                },
                                                "Html_to_text_-_internal": {
                                                    "runAfter": {
                                                        "Html_to_text_-_external": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": "<p>@{body('HTTP')['internalReplyMessage']}</p>",
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['conversionservice']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/html2text"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_disabled": {
                                            "case": "disabled",
                                            "actions": {
                                                "Append_to_DetailedResults_-_disabled": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "DetailedResults",
                                                        "value": {
                                                            "ExternalMessage": "",
                                                            "InternalMessage": "",
                                                            "OOFStatus": "disabled",
                                                            "UPN": "@{items('For_each')?['userPrincipalName']}"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_enabled": {
                                            "case": "enabled",
                                            "actions": {
                                                "Append_to_DetailedResults_-_enabled": {
                                                    "runAfter": {
                                                        "Html_to_text_-_internal_enabled": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "DetailedResults",
                                                        "value": {
                                                            "ExternalMessage": "@{take(body('Html_to_text_-_external_enabled'), 600)}",
                                                            "InternalMessage": "@{take(body('Html_to_text_-_internal_enabled'), 600)}",
                                                            "OOFStatus": "enabled",
                                                            "UPN": "@{items('For_each')?['userPrincipalName']}"
                                                        }
                                                    }
                                                },
                                                "Html_to_text_-_external_enabled": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": "<p>@{body('HTTP')['externalReplyMessage']}</p>",
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['conversionservice']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/html2text"
                                                    }
                                                },
                                                "Html_to_text_-_internal_enabled": {
                                                    "runAfter": {
                                                        "Html_to_text_-_external_enabled": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": "<p>@{body('HTTP')['internalReplyMessage']}</p>",
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['conversionservice']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/html2text"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_scheduled": {
                                            "case": "scheduled",
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Append_to_array_variable_3": {
                                                            "runAfter": {
                                                                "Html_to_text_-_internal_scheduled": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "AppendToArrayVariable",
                                                            "inputs": {
                                                                "name": "DetailedResults",
                                                                "value": {
                                                                    "ExternalMessage": "@{take(body('Html_to_text_-_external_scheduled'),600)}",
                                                                    "InternalMessage": "@{take(body('Html_to_text_-_internal_scheduled'),600)}",
                                                                    "OOFStatus": "enabled",
                                                                    "UPN": "@{items('For_each')?['userPrincipalName']}"
                                                                }
                                                            }
                                                        },
                                                        "Html_to_text_-_external_scheduled": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": "<p>@{body('HTTP')['externalReplyMessage']}</p>",
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['conversionservice']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/html2text"
                                                            }
                                                        },
                                                        "Html_to_text_-_internal_scheduled": {
                                                            "runAfter": {
                                                                "Html_to_text_-_external_scheduled": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": "<p>@{body('HTTP')['internalReplyMessage']}</p>",
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['conversionservice']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/html2text"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "else": {
                                                        "actions": {
                                                            "Append_to_array_variable_4": {
                                                                "runAfter": {},
                                                                "type": "AppendToArrayVariable",
                                                                "inputs": {
                                                                    "name": "DetailedResults",
                                                                    "value": {
                                                                        "ExternalMessage": "",
                                                                        "InternalMessage": "",
                                                                        "OOFStatus": "disabled",
                                                                        "UPN": "@{items('For_each')?['userPrincipalName']}"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "greaterOrEquals": [
                                                                    "@body('Current_time')",
                                                                    "@body('HTTP')['scheduledStartDateTime']['dateTime']"
                                                                ]
                                                            },
                                                            {
                                                                "lessOrEquals": [
                                                                    "@body('Current_time')",
                                                                    "@body('HTTP')['scheduledEndDateTime']['dateTime']"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {
                                            "Append_to_array_variable_5": {
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "DetailedResults",
                                                    "value": {
                                                        "ExternalMessage": "",
                                                        "InternalMessage": "",
                                                        "OOFStatus": "unknown",
                                                        "UPN": "@{items('For_each')?['userPrincipalName']}"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": "@body('HTTP')['status']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {
                                "Condition_-_Check_for_Account_Entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_-_APIFailure": {
                            "runAfter": {
                                "Initialize_variable_-_DetailedResults": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "APIFailure",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_DetailedResults": {
                            "runAfter": {
                                "Current_time": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DetailedResults",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['Entities']",
                                "schema": {
                                    "properties": {
                                        "Accounts": {
                                            "description": "Array of User Accounts",
                                            "items": {
                                                "properties": {
                                                    "AssignedRoles": {
                                                        "description": "Array of assigned roles in Accounts array",
                                                        "items": {
                                                            "properties": {
                                                                "Role": {
                                                                    "description": "Array property in AssignedRoles array"
                                                                }
                                                            },
                                                            "required": [],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Accounts array",
                                                        "properties": {
                                                            "accountName": {
                                                                "description": "accountName from RawEntity object in Accounts array"
                                                            },
                                                            "displayName": {
                                                                "description": "dislayName from RawEntity object in Accounts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Accounts array"
                                                            },
                                                            "isDomainJoined": {
                                                                "description": "isDomainJoined from RawEntity object in Accounts array"
                                                            },
                                                            "sid": {
                                                                "description": "sid from RawEntity object in Accounts array"
                                                            },
                                                            "upnSuffix": {
                                                                "description": "upnSuffix from RawEntity object in Accounts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "accountEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "city": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "country": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "department": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "id": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "jobTitle": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "mail": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "manager": {
                                                        "description": "Array property in Accounts array",
                                                        "properties": {
                                                            "@@odata.type": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "id": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "mail": {
                                                                "description": "Array property in Accounts array manager object"
                                                            },
                                                            "userPrincipalName": {
                                                                "description": "Array property in Accounts array manager object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "officeLocation": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDistinguishedName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesDomainName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSamAccountName": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSecurityIdentifier": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "onPremisesSyncEnabled": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "state": {
                                                        "description": "Array property in Accounts array"
                                                    },
                                                    "userPrincipalName": {
                                                        "description": "Array property in Accounts array"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "AccountsCount": {
                                            "description": "Count of accounts processed by module",
                                            "type": "integer"
                                        },
                                        "Domains": {
                                            "description": "Array of Domains",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Domains array",
                                                        "properties": {
                                                            "domainName": {
                                                                "description": "domainName from RawEntity object in Domains array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Domains array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "DomainsCount": {
                                            "description": "Count of Domains processed by module",
                                            "type": "integer"
                                        },
                                        "EntitiesCount": {
                                            "description": "Count of all entities processed by enrichment module",
                                            "type": "integer"
                                        },
                                        "FileHashes": {
                                            "description": "Array of FileHashes",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in FileHashes array",
                                                        "properties": {
                                                            "algorithm": {
                                                                "description": "algorithm from RawEntity object in FileHashes array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in FileHashes array"
                                                            },
                                                            "hashValue": {
                                                                "description": "hashValue from RawEntity object in FileHashes array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FileHashesCount": {
                                            "description": "Count of File Hashes processed by module",
                                            "type": "integer"
                                        },
                                        "Files": {
                                            "description": "Array of Files",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Files array",
                                                        "properties": {
                                                            "directory": {
                                                                "description": "directory from RawEntity object in Files array"
                                                            },
                                                            "fileName": {
                                                                "description": "fileName from RawEntity object in Files array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Files array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "FilesCount": {
                                            "description": "Count of Files processed by module",
                                            "type": "integer"
                                        },
                                        "Hosts": {
                                            "description": "Array of Hosts",
                                            "items": {
                                                "properties": {
                                                    "DnsDomain": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "FQDN": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "Hostname": {
                                                        "description": "Array property in Hosts array"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in Hosts array",
                                                        "properties": {
                                                            "dnsDomain": {
                                                                "description": "dnsDomain from RawEntity object in Hosts array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in Hosts array"
                                                            },
                                                            "hostName": {
                                                                "description": "hostName from RawEntity object in Hosts array"
                                                            },
                                                            "netBiosName": {
                                                                "description": "netBiosName from RawEntity object in Hosts array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "HostsCount": {
                                            "description": "Count of Hosts processed by module",
                                            "type": "integer"
                                        },
                                        "IPs": {
                                            "description": "Array of IP Addresses",
                                            "items": {
                                                "properties": {
                                                    "Address": {
                                                        "description": "Array property in IPs array"
                                                    },
                                                    "GeoData": {
                                                        "description": "Array object in IPs array",
                                                        "properties": {
                                                            "asn": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "carrier": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "city": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "cityCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "continent": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "country": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "countryCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipAddr": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "ipRoutingType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "latitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "longitude": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organization": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "organizationType": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "region": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "state": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCf": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            },
                                                            "stateCode": {
                                                                "description": "Array property in IPs array GeoData object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in IPs array",
                                                        "properties": {
                                                            "address": {
                                                                "description": "address from RawEntity object in IPs array"
                                                            },
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in IPs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "IPsCount": {
                                            "description": "Count of IPs processed by module",
                                            "type": "integer"
                                        },
                                        "IncidentARMId": {
                                            "description": "The ARM Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        },
                                        "URLs": {
                                            "description": "Array of URLs",
                                            "items": {
                                                "properties": {
                                                    "RawEntity": {
                                                        "description": "Object containing Raw unenriched entity data in URLs array",
                                                        "properties": {
                                                            "friendlyName": {
                                                                "description": "friendlyName from RawEntity object in URLs array"
                                                            },
                                                            "url": {
                                                                "description": "url from RawEntity object in URLs array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "URLsCount": {
                                            "description": "Count of URLs processed by module",
                                            "type": "integer"
                                        },
                                        "WorkspaceId": {
                                            "description": "The Log Analytics Workspace Id of the Azure Sentinel Incident",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Condition_-_Comment": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@outputs('Compose')",
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "conversionservice": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ConversionServiceConnectionName'))]",
                                "connectionName": "[variables('ConversionServiceConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/conversionservice')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}

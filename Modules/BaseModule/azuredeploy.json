{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Base-Module",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "accessControl": {
                    "triggers": {
                        "allowedCallerIpAddresses": []
                    }
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "PlaybookVersion": {
                            "defaultValue": "0.4.0",
                            "type": "String"
                        },
                        "PlaybookInternalName": {
                            "defaultValue": "BaseModule",
                            "type": "String"
                        },
                        "ProjectName": {
                            "defaultValue": "STAT",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "enrich": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddAccountComment": {
                                            "type": "boolean"
                                        },
                                        "AddIPComment": {
                                            "type": "boolean"
                                        },
                                        "EnrichIPsWithGeoData": {
                                            "type": "boolean"
                                        },
                                        "Entities": {
                                            "description": "Click here and select the Entities object from the Dynamic content menu",
                                            "type": "array"
                                        },
                                        "IncidentARMId": {
                                            "description": "Click here and select the Incident ARM ID object from the Dynamic content menu",
                                            "type": "string"
                                        },
                                        "WorkspaceId": {
                                            "description": "Click here and select the Workspace ID object from the Dynamic content menu",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose": {
                            "runAfter": {
                                "Convert_to_JSON": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "Filter_array_-_Other": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_Domain": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_FIleHash": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_File": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_URL": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_account": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_host": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_ip": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "Accounts": "@variables('AccountsArray')",
                                "AccountsCount": "@length(variables('AccountsArray'))",
                                "Domains": "@variables('DomainArray')",
                                "DomainsCount": "@length(variables('DomainArray'))",
                                "EntitiesCount": "@add(add(add(length(variables('AccountsArray')),length(variables('DomainArray'))),add(length(variables('FileArray')),length(variables('FileHashArray')))),add(add(length(variables('HostArray')),length(variables('IPArray'))),length(variables('URLArray'))))",
                                "FileHashes": "@variables('FileHashArray')",
                                "FileHashesCount": "@length(variables('FileHashArray'))",
                                "Files": "@variables('FileArray')",
                                "FilesCount": "@length(variables('FileArray'))",
                                "Hosts": "@variables('HostArray')",
                                "HostsCount": "@length(variables('HostArray'))",
                                "IPs": "@variables('IPArray')",
                                "IPsCount": "@length(variables('IPArray'))",
                                "IncidentARMId": "@triggerBody()?['IncidentARMId']",
                                "ModuleName": "@{parameters('PlaybookInternalName')}",
                                "ModuleVersions": "@outputs('Convert_to_JSON')",
                                "OtherEntities": "@body('Filter_array_-_Other')",
                                "OtherEntitiesCount": "@length(body('Filter_array_-_Other'))",
                                "TenantDisplayName": "@{body('HTTP_-_Get_Tenant')?['value']?[0]?['displayName']}",
                                "TenantId": "@{body('HTTP_-_Get_Tenant')?['value']?[0]?['id']}",
                                "URLs": "@variables('URLArray')",
                                "URLsCount": "@length(variables('URLArray'))",
                                "WorkspaceId": "@triggerBody()?['WorkspaceId']"
                            }
                        },
                        "Condition_-_Account_Comment": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_-_User_Enrichment": {
                                    "runAfter": {
                                        "Create_HTML_table_-_Accounts": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['IncidentARMId']",
                                            "message": "<p>@{body('Create_HTML_table_-_Accounts')}@{if(not(equals(outputs('Compose')?['ModuleVersions'], null)), if(equals(parameters('PlaybookVersion'),outputs('Compose')?['ModuleVersions']?[parameters('PlaybookInternalName')]), '', concat('<br>Sentinel Triage AssistanT - Update Available: Installed Version: ', parameters('PlaybookVersion'), ', Available Version: ', outputs('Compose')?['ModuleVersions']?[parameters('PlaybookInternalName')])) , '')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Create_HTML_table_-_Accounts": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "UserPrincipalName",
                                                "value": "@coalesce(item()?['userPrincipalName'], concat(item()?['RawEntity']?['friendlyName'], ' (Unresolved Entity)'))"
                                            },
                                            {
                                                "header": "City",
                                                "value": "@item()?['city']"
                                            },
                                            {
                                                "header": "Country",
                                                "value": "@item()?['country']"
                                            },
                                            {
                                                "header": "Department",
                                                "value": "@item()?['department']"
                                            },
                                            {
                                                "header": "JobTitle",
                                                "value": "@item()?['jobTitle']"
                                            },
                                            {
                                                "header": "Office",
                                                "value": "@item()?['officeLocation']"
                                            },
                                            {
                                                "header": "AADPrivileged",
                                                "value": "@item()?['isAADPrivileged']"
                                            },
                                            {
                                                "header": "ManagerUPN",
                                                "value": "@item()?['manager']?['userPrincipalName']"
                                            },
                                            {
                                                "header": "MfaRegistered",
                                                "value": "@coalesce(item()?['isMfaRegistered'], 'Unknown')"
                                            },
                                            {
                                                "header": "SSPREnabled",
                                                "value": "@coalesce(item()?['isSSPREnabled'], 'Unknown')"
                                            },
                                            {
                                                "header": "SSPRRegistered",
                                                "value": "@coalesce(item()?['isSSPRRegistered'], 'Unknown')"
                                            }
                                        ],
                                        "format": "HTML",
                                        "from": "@variables('AccountsArray')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['AddAccountComment']",
                                            true
                                        ]
                                    },
                                    {
                                        "greater": [
                                            "@length(variables('AccountsArray'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_IP_Comment": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_-_IP_Enrichment": {
                                    "runAfter": {
                                        "Create_HTML_table_-_IP_Comment": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['IncidentARMId']",
                                            "message": "<p>@{body('Create_HTML_table_-_IP_Comment')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Create_HTML_table_-_IP_Comment": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "IP",
                                                "value": "@item()?['ipAddr']"
                                            },
                                            {
                                                "header": "City",
                                                "value": "@item()?['city']"
                                            },
                                            {
                                                "header": "State",
                                                "value": "@item()?['state']"
                                            },
                                            {
                                                "header": "Country",
                                                "value": "@item()?['country']"
                                            },
                                            {
                                                "header": "Organization",
                                                "value": "@item()?['organization']"
                                            },
                                            {
                                                "header": "OrganizationType",
                                                "value": "@item()?['organizationType']"
                                            },
                                            {
                                                "header": "ASN",
                                                "value": "@item()?['asn']"
                                            }
                                        ],
                                        "format": "HTML",
                                        "from": "@variables('IPComment')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['AddIPComment']",
                                            true
                                        ]
                                    },
                                    {
                                        "greater": [
                                            "@length(variables('IPComment'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_Entity_Check": {
                            "actions": {
                                "Add_comment_to_incident_-_No_Entities": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['IncidentARMId']",
                                            "message": "<p>The Microsoft Sentinel Triage AssistanT failed to analyze this incident. This error was due to no incident entities being available at the time the incident was processed.</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Response_-_No_Entities_Found": {
                                    "runAfter": {
                                        "Add_comment_to_incident_-_No_Entities": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "Error": "@{parameters('PlaybookInternalName')} failed to execute with status no entities found",
                                            "PlaybookName": "@{workflow()?['name']}",
                                            "PlaybookResourceId": "@{workflow()?['id']}",
                                            "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                            "PlaybookVersion": "@parameters('PlaybookVersion')"
                                        },
                                        "statusCode": 404
                                    }
                                },
                                "Terminate": {
                                    "runAfter": {
                                        "Response_-_No_Entities_Found": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "code": "404",
                                            "message": "No entities present in incident trigger"
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(triggerBody()?['Entities'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Convert_to_JSON": {
                            "runAfter": {
                                "HTTP_-_Version_Download": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@json(body('HTTP_-_Version_Download'))"
                        },
                        "Filter_array_-_Accounts": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'account')"
                            }
                        },
                        "Filter_array_-_Domains": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'dnsresolution')"
                            }
                        },
                        "Filter_array_-_File_Hashes": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'filehash')"
                            }
                        },
                        "Filter_array_-_Files": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'file')"
                            }
                        },
                        "Filter_array_-_Hosts": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'host')"
                            }
                        },
                        "Filter_array_-_IPs": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'ip')"
                            }
                        },
                        "Filter_array_-_Other": {
                            "runAfter": {
                                "HTTP_-_Get_Tenant": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@and(not(equals(toLower(item()['kind']), 'url')),not(equals(toLower(item()['kind']), 'ip')),not(equals(toLower(item()['kind']), 'host')),not(equals(toLower(item()['kind']), 'file')),not(equals(toLower(item()['kind']), 'filehash')),not(equals(toLower(item()['kind']), 'dnsresolution')),not(equals(toLower(item()['kind']), 'account')))"
                            }
                        },
                        "Filter_array_-_URLs": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(toLower(item()['kind']), 'url')"
                            }
                        },
                        "For_each_Domain": {
                            "foreach": "@body('Filter_array_-_Domains')",
                            "actions": {
                                "Append_to_DomainArray": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "DomainArray",
                                        "value": {
                                            "RawEntity": "@item()['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_DomainArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_FIleHash": {
                            "foreach": "@body('Filter_array_-_File_Hashes')",
                            "actions": {
                                "Append_to_FileHashArray": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "FileHashArray",
                                        "value": {
                                            "RawEntity": "@items('For_each_FIleHash')['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_FileHashArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_File": {
                            "foreach": "@body('Filter_array_-_Files')",
                            "actions": {
                                "Append_to_FileArray": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "FileArray",
                                        "value": {
                                            "RawEntity": "@items('For_each_File')['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_FileArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_URL": {
                            "foreach": "@body('Filter_array_-_URLs')",
                            "actions": {
                                "Append_to_URLArray": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "URLArray",
                                        "value": {
                                            "RawEntity": "@items('For_each_URL')['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_URLArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_account": {
                            "foreach": "@body('Select_Accounts')",
                            "actions": {
                                "Append_to_AccountArray": {
                                    "runAfter": {
                                        "Compose_User": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "AccountsArray",
                                        "value": "@outputs('Compose_User')"
                                    }
                                },
                                "Append_to_AccountArray_Unenriched": {
                                    "runAfter": {
                                        "Compose_User_Unenriched": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "AccountsArray",
                                        "value": "@outputs('Compose_User_Unenriched')"
                                    }
                                },
                                "Compose_UPN": {
                                    "runAfter": {
                                        "Compose_UserId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@coalesce(body('HTTP_-_Email')?['value']?[0]?['userPrincipalName'],body('HTTP_-_UPN')?['userPrincipalName'],body('HTTP_-_AADId')?['userPrincipalName'],body('HTTP_-_ObjectSid')?['value']?[0]?['userPrincipalName'],body('HTTP_-_SamAccountName')?['value']?[0]?['userPrincipalName'],body('HTTP_-_DistinguishedName')?['value']?[0]?['userPrincipalName'])"
                                },
                                "Compose_User": {
                                    "runAfter": {
                                        "HTTP_-_Security_Info": [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@addProperty(addProperty(addProperty(addProperty(addProperty(addProperty(coalesce(body('HTTP_-_Email')?['value']?[0],body('HTTP_-_UPN'),body('HTTP_-_AADId'),body('HTTP_-_ObjectSid')?['value']?[0],body('HTTP_-_SamAccountName')?['value']?[0],body('HTTP_-_DistinguishedName')?['value']?[0]), 'AssignedRoles', body('Select_Roles')), 'RawEntity', item()['RawEntity']), 'isAADPrivileged', if(greater(length(body('Select_Roles')), 0), true, false)), 'isMfaRegistered', body('HTTP_-_Security_Info')?['value']?[0]?['isMfaRegistered']), 'isSSPREnabled', body('HTTP_-_Security_Info')?['value']?[0]?['isEnabled']), 'isSSPRRegistered', body('HTTP_-_Security_Info')?['value']?[0]?['isRegistered'])"
                                },
                                "Compose_UserId": {
                                    "runAfter": {
                                        "Switch": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@coalesce(body('HTTP_-_Email')?['value']?[0]?['id'],body('HTTP_-_UPN')?['id'],body('HTTP_-_AADId')?['id'],body('HTTP_-_ObjectSid')?['value']?[0]?['id'],body('HTTP_-_SamAccountName')?['value']?[0]?['id'],body('HTTP_-_DistinguishedName')?['value']?[0]?['id'])"
                                },
                                "Compose_User_Unenriched": {
                                    "runAfter": {
                                        "HTTP_-_Roles": [
                                            "Skipped",
                                            "Failed"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "RawEntity": "@item()['RawEntity']"
                                    }
                                },
                                "HTTP_-_Roles": {
                                    "runAfter": {
                                        "Compose_UPN": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/v1.0/roleManagement/directory/roleAssignments?$filter=principalId%20eq%20'@{outputs('Compose_UserId')}'&$expand=roleDefinition"
                                    }
                                },
                                "HTTP_-_Security_Info": {
                                    "runAfter": {
                                        "Select_Roles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/beta/reports/credentialUserRegistrationDetails?$filter=userPrincipalName%20eq%20'@{outputs('Compose_UPN')}'"
                                    }
                                },
                                "Select_Roles": {
                                    "runAfter": {
                                        "HTTP_-_Roles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Select",
                                    "inputs": {
                                        "from": "@body('HTTP_-_Roles')['value']",
                                        "select": {
                                            "Role": "@item()['roleDefinition']['displayName']"
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {},
                                    "cases": {
                                        "Case_-_AADId": {
                                            "case": "AADId",
                                            "actions": {
                                                "HTTP_-_AADId": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{items('For_each_account')['aadUserId']}?$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_DistinguishedName": {
                                            "case": "DistinguishedName",
                                            "actions": {
                                                "HTTP_-_DistinguishedName": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/beta/users?$filter=(onPremisesDistinguishedName%20eq%20'@{items('For_each_account')['accountName']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_ObjectSid": {
                                            "case": "ObjectSid",
                                            "actions": {
                                                "HTTP_-_ObjectSid": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users?$filter=(onPremisesSecurityIdentifier%20eq%20'@{items('For_each_account')['sid']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_SamAccountName": {
                                            "case": "SamAccountName",
                                            "actions": {
                                                "Filter_array": {
                                                    "runAfter": {
                                                        "HTTP_-_SamAccountName": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('HTTP_-_SamAccountName')['value']",
                                                        "where": "@and(equals(item()['onPremisesSamAccountName'], items('For_each_account')['accountName']),equals(toUpper(split(item()['onPremisesDomainName'], '.')[0]), items('For_each_account')['ntDomain']))"
                                                    }
                                                },
                                                "HTTP_-_SamAccountName": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/beta/users?$filter=mailNickname%20eq%20'@{items('For_each_account')['accountName']}'%20or%20startswith(onPremisesUserPrincipalName,'@{items('For_each_account')['accountName']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_UPN": {
                                            "case": "UPN",
                                            "actions": {
                                                "HTTP_-_Email": {
                                                    "runAfter": {
                                                        "HTTP_-_UPN": [
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users?$filter=(mail%20eq%20'@{concat(item()['accountName'], '@', item()['upnSuffix'])}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                },
                                                "HTTP_-_UPN": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{concat(item()['accountName'], '@', item()['upnSuffix'])}?$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@item()['accountType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {
                                "Initialize_Select_Properties": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_host": {
                            "foreach": "@body('Filter_array_-_Hosts')",
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "HostArray",
                                        "value": {
                                            "DnsDomain": "@{items('For_each_host')['properties']?['dnsDomain']}",
                                            "FQDN": "@{concat(item()['properties']?['hostName'], '.', item()['properties']?['dnsDomain'])}",
                                            "Hostname": "@{items('For_each_host')['properties']?['hostName']}",
                                            "RawEntity": "@item()['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_HostArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_ip": {
                            "foreach": "@body('Filter_array_-_IPs')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Append_to_IPArray_-_Geo_Failure": {
                                            "runAfter": {
                                                "HTTP_-_Get_Geo_Data": [
                                                    "TimedOut",
                                                    "Failed"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPArray",
                                                "value": {
                                                    "Address": "@{items('For_each_ip')['properties']['address']}",
                                                    "GeoData": {},
                                                    "RawEntity": "@items('For_each_ip')['properties']"
                                                }
                                            }
                                        },
                                        "Append_to_IPArray_With_GeoData": {
                                            "runAfter": {
                                                "HTTP_-_Get_Geo_Data": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPArray",
                                                "value": {
                                                    "Address": "@{items('For_each_ip')['properties']['address']}",
                                                    "GeoData": "@body('HTTP_-_Get_Geo_Data')",
                                                    "RawEntity": "@items('For_each_ip')['properties']"
                                                }
                                            }
                                        },
                                        "Append_to_IPComment": {
                                            "runAfter": {
                                                "Append_to_IPArray_With_GeoData": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPComment",
                                                "value": "@body('HTTP_-_Get_Geo_Data')"
                                            }
                                        },
                                        "HTTP_-_Get_Geo_Data": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "api-version": "2019-01-01-preview",
                                                    "ipaddress": "@{items('For_each_ip')['properties']['address']}"
                                                },
                                                "uri": "https://management.azure.com@{split(triggerBody()?['IncidentARMId'], '/providers/')[0]}/providers/Microsoft.SecurityInsights/enrichment/ip/geodata/"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Append_to_IPArray_Without_GeoData": {
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "IPArray",
                                                    "value": {
                                                        "Address": "@{items('For_each_ip')['properties']['address']}",
                                                        "GeoData": {},
                                                        "RawEntity": "@items('For_each_ip')['properties']"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@triggerBody()?['EnrichIPsWithGeoData']",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Initialize_IPComment_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP_-_Get_Tenant": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/organization"
                            }
                        },
                        "HTTP_-_Test_API_Access": {
                            "runAfter": {
                                "Condition_Entity_Check": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/users?$top=1&$select=id"
                            }
                        },
                        "HTTP_-_Version_Download": {
                            "runAfter": {
                                "HTTP_-_Version_Redirect": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "retryPolicy": {
                                    "count": 2,
                                    "interval": "PT10S",
                                    "type": "fixed"
                                },
                                "uri": "@{outputs('HTTP_-_Version_Redirect')['headers']?['Location']}"
                            }
                        },
                        "HTTP_-_Version_Redirect": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "retryPolicy": {
                                    "count": 2,
                                    "interval": "PT10S",
                                    "type": "fixed"
                                },
                                "uri": "https://aka.ms/mstatversion"
                            }
                        },
                        "Initialize_AccountsArray": {
                            "runAfter": {
                                "Select_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AccountsArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_DomainArray": {
                            "runAfter": {
                                "Filter_array_-_Domains": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DomainArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_FileArray": {
                            "runAfter": {
                                "Filter_array_-_Files": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FileArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_FileHashArray": {
                            "runAfter": {
                                "Filter_array_-_File_Hashes": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FileHashArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_HostArray": {
                            "runAfter": {
                                "Filter_array_-_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "HostArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_IPArray": {
                            "runAfter": {
                                "Filter_array_-_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_IPComment_Array": {
                            "runAfter": {
                                "Initialize_IPArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPComment",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_Select_Properties": {
                            "runAfter": {
                                "Initialize_AccountsArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SelectProperties",
                                        "type": "string",
                                        "value": "userPrincipalName,id,onPremisesSecurityIdentifier,onPremisesDistinguishedName,onPremisesDomainName,onPremisesSamAccountName,onPremisesSyncEnabled,mail,city,state,country,department,jobTitle,officeLocation,accountEnabled&$expand=manager($select=userPrincipalName,mail,id)"
                                    }
                                ]
                            }
                        },
                        "Initialize_URLArray": {
                            "runAfter": {
                                "Filter_array_-_URLs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URLArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Condition_-_Account_Comment": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "Condition_-_IP_Comment": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@outputs('Compose')",
                                "statusCode": 200
                            }
                        },
                        "Response_-_API_Failure": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Failed"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "Error": "@{parameters('PlaybookInternalName')} failed to execute with status @{outputs('HTTP_-_Test_API_Access')['statusCode']}",
                                    "PlaybookName": "@{workflow()?['name']}",
                                    "PlaybookResourceId": "@{workflow()?['id']}",
                                    "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                    "PlaybookVersion": "@parameters('PlaybookVersion')",
                                    "SourceError": "@body('HTTP_-_Test_API_Access')"
                                },
                                "statusCode": "@outputs('HTTP_-_Test_API_Access')['statusCode']"
                            }
                        },
                        "Select_Accounts": {
                            "runAfter": {
                                "Filter_array_-_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Filter_array_-_Accounts')",
                                "select": {
                                    "RawEntity": "@item()['properties']",
                                    "aadUserId": "@item()['properties']?['aadUserId']",
                                    "accountName": "@item()['properties']?['accountName']",
                                    "accountType": "@if(not(empty(item()['properties']?['aadUserId'])), 'AADId', if(not(empty(item()['properties']?['upnSuffix'])), 'UPN', if(not(empty(item()['properties']?['sid'])), 'ObjectSid', if(not(empty(item()['properties']?['ntDomain'])), 'SamAccountName', if(contains(item()['properties']?['accountName'], ',DC='), 'DistinguishedName', 'Unknown')))))",
                                    "ntDomain": "@item()['properties']?['ntDomain']",
                                    "sid": "@item()['properties']?['sid']",
                                    "upnSuffix": "@item()['properties']?['upnSuffix']"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('PlaybookName'))]"
        }
    }
}